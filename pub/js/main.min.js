"use strict";var URL="https://albinronnkvist.se/dt173g/projekt/webbtjanst/playerstats.php/spelare",poangligaEL=document.getElementById("poangliga"),currentPlayerEL=document.getElementById("currentplayer");document.addEventListener("DOMContentLoaded",function(){switch(window.location.pathname.split("/").pop()){case"index.html":(l=new XMLHttpRequest).onreadystatechange=function(){if(l.readyState==XMLHttpRequest.DONE)if(200==l.status)for(var e=JSON.parse(l.responseText),t=0;t<e.length;t++){var n=1+t;poangligaEL.innerHTML+="<tr><td>"+n+"</td><td>"+e[t].Fullname+"</td><td>"+e[t].Team+"</td><td>"+e[t].Goals+"</td><td>"+e[t].Assists+"</td><td>"+e[t].Points+"</td></tr>"}else 400==l.status?alert("OBS! Något gick fel, försök igen senare. (Error 400)"):alert("OBS! Något gick fel, försök igen senare. (Error: något annat än 200 returnerades)")},l.open("GET",URL,!0),l.send();break;case"create.html":document.getElementById("createplayer").addEventListener("click",function(){var e=document.getElementById("cfullname").value;e=e.replace(/[^-'\s]+/g,function(e){return e.replace(/^./,function(e){return e.toUpperCase()})});var t=document.getElementById("cteam").value,n=document.getElementById("cgoals").value,a=document.getElementById("cassists").value,l=+n+ +a;if(null==e||""==e||0==e.length)return alert("OBS! Du måste fylla i ett namn."),!1;var s={fullname:e,team:t,goals:n,assists:a,points:l},o=new XMLHttpRequest;o.open("POST",URL,!0),o.setRequestHeader("Content-Type","application/json"),o.onreadystatechange=function(){4==this.readyState&&200==this.status&&(document.getElementById("myModal").style.display="block",document.getElementById("modal-text").style.color="#4BB543",document.getElementById("modal-text").innerHTML+="<i class='far fa-check-circle'></i><br><br>Användare skapad!<br><br><br>",document.getElementById("close").addEventListener("click",function(){location.reload()}))},o.send(JSON.stringify(s))});break;case"edit.html":poangligaEL.addEventListener("click",function(e){if(e.target.classList.contains("deletebutton")){var t=new XMLHttpRequest;t.open("DELETE",URL+"/"+e.target.id,!0),t.send(),t.onload=function(){location.reload()}}}),(l=new XMLHttpRequest).onreadystatechange=function(){if(l.readyState==XMLHttpRequest.DONE)if(200==l.status)for(var e=JSON.parse(l.responseText),t=0;t<e.length;t++)poangligaEL.innerHTML+="<tr><td>"+e[t].Fullname+"</td><td>"+e[t].Team+"</td><td><a class='button' href='edit-player.html?playerid="+e[t].id+"' title='Redigera "+e[t].Fullname+"'><i class='far fa-edit'></i></a></td><td><a class='deletebutton' id='"+e[t].id+"' title='Radera "+e[t].Fullname+"'><i class='fas fa-trash-alt'></i></a></td></tr>";else 400==l.status?alert("OBS! Något gick fel, försök igen senare. (Error 400)"):alert("OBS! Något gick fel, försök igen senare. (Error: något annat än 200 returnerades)")},l.open("GET",URL,!0),l.send();break;case"edit-player.html":var l,d=location.search.substring(10);(l=new XMLHttpRequest).onreadystatechange=function(){if(l.readyState==XMLHttpRequest.DONE)if(200==l.status)for(var e=JSON.parse(l.responseText),t=0;t<e.length;t++){currentPlayerEL.innerHTML+=" <b>"+e[t].Fullname+"</b>",document.getElementById("ufullname").value=e[t].Fullname;var n=document.getElementById("uteam"),a=document.createElement("option");a.value=e[t].Team,a.text=e[t].Team,n.add(a,n[0]),n.selectedIndex="0",document.getElementById("ugoals").value=e[t].Goals,document.getElementById("uassists").value=e[t].Assists}else 400==l.status?alert("OBS! Något gick fel, försök igen senare. (Error 400)"):alert("OBS! Något gick fel, försök igen senare. (Error: något annat än 200 returnerades)")},l.open("GET",URL+"/"+d,!0),l.send(),document.getElementById("updateplayer").addEventListener("click",function(){var e=document.getElementById("ufullname").value;e=e.replace(/[^-'\s]+/g,function(e){return e.replace(/^./,function(e){return e.toUpperCase()})});var t=document.getElementById("uteam").value,n=document.getElementById("ugoals").value,a=document.getElementById("uassists").value,l=+n+ +a;if(null==e||""==e||0==e.length)return alert("OBS! Du måste fylla i ett namn."),!1;var s={fullname:e,team:t,goals:n,assists:a,points:l},o=new XMLHttpRequest;o.open("PUT",URL+"/"+d,!0),o.setRequestHeader("Content-Type","application/json"),o.onreadystatechange=function(){4==this.readyState&&200==this.status&&(document.getElementById("myModal").style.display="block",document.getElementById("modal-text").style.color="#4BB543",document.getElementById("modal-text").innerHTML+="<i class='far fa-check-circle'></i><br><br>Användare uppdaterad!<br><br><br>",document.getElementById("close").addEventListener("click",function(){location.reload()}))},o.send(JSON.stringify(s))})}});var currentYear=(new Date).getFullYear(),footerTextEL=document.getElementById("footertext");function scrollFunction(){20<document.body.scrollTop||20<document.documentElement.scrollTop?document.getElementById("to-top").style.display="block":document.getElementById("to-top").style.display="none"}function topFunction(){document.body.scrollTop=0,document.documentElement.scrollTop=0}footerTextEL.innerHTML+="<i class='far fa-copyright'></i> "+currentYear+" Albin Rönnkvist",document.onreadystatechange=function(){var e=document.readyState;"interactive"==e?(document.getElementById("content").style.visibility="hidden",document.getElementById("load").style.visibility="hidden",setTimeout(function(){document.getElementById("load").style.visibility="visible"},500)):"complete"==e&&setTimeout(function(){document.getElementById("interactive"),document.getElementById("load").style.visibility="hidden",document.getElementById("load").style.height="0px",document.getElementById("content").style.visibility="visible"})},window.onscroll=function(){scrollFunction()};var opencrumbs=document.getElementById("opencrumbs");void 0!==opencrumbs&&null!=opencrumbs&&opencrumbs.addEventListener("click",function(){for(var e=document.getElementsByClassName("crumbschildren"),t=0;t<e.length;t++)"0px"!=e[t].style.marginLeft?e[t].style.marginLeft="0px":e[t].style.marginLeft="-50px"});var menutoggleEl=document.getElementById("menutoggle"),mainmenuEl=document.getElementById("mainmenu");function toggle(){"none"===mainmenuEl.style.display?(mainmenuEl.style.display="block",menutoggleEl.classList.add("toggleactive")):(mainmenuEl.style.display="none",menutoggleEl.classList.remove("toggleactive"))}function displaymenu(){window.matchMedia("(min-width: 800px)").matches?mainmenuEl.style.display="block":(mainmenuEl.style.display="none",menutoggleEl.classList.remove("toggleactive"))}menutoggleEl.addEventListener("click",toggle,!1),window.matchMedia("(min-width: 800px)").matches?mainmenuEl.style.display="block":mainmenuEl.style.display="none",window.addEventListener("resize",displaymenu,!1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
